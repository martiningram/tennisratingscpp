// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ServeReturnEloStaticK
std::map<std::string, std::vector<double>> ServeReturnEloStaticK(std::vector<std::string> server_names, std::vector<std::string> returner_names, std::vector<bool> server_won, double k, double return_starting_elo);
RcppExport SEXP _tennisratingscpp_ServeReturnEloStaticK(SEXP server_namesSEXP, SEXP returner_namesSEXP, SEXP server_wonSEXP, SEXP kSEXP, SEXP return_starting_eloSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type server_names(server_namesSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type returner_names(returner_namesSEXP);
    Rcpp::traits::input_parameter< std::vector<bool> >::type server_won(server_wonSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type return_starting_elo(return_starting_eloSEXP);
    rcpp_result_gen = Rcpp::wrap(ServeReturnEloStaticK(server_names, returner_names, server_won, k, return_starting_elo));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tennisratingscpp_ServeReturnEloStaticK", (DL_FUNC) &_tennisratingscpp_ServeReturnEloStaticK, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_tennisratingscpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
